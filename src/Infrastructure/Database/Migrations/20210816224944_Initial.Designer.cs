// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Database.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210816224944_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Domain.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Domain.ValueObjects.ClientSubscriber", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriberId")
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId", "SubscriberId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("ClientSubscribers");
                });

            modelBuilder.Entity("Domain.Client", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.ClientName", "_name", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("TEXT")
                                .HasColumnName("Name");

                            b1.HasKey("ClientId");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.OwnsOne("Domain.ValueObjects.ClientPopularity", "_popularity", b1 =>
                        {
                            b1.Property<Guid>("ClientId")
                                .HasColumnType("TEXT");

                            b1.Property<uint>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Popularity");

                            b1.HasKey("ClientId");

                            b1.ToTable("Clients");

                            b1.WithOwner()
                                .HasForeignKey("ClientId");
                        });

                    b.Navigation("_name");

                    b.Navigation("_popularity");
                });

            modelBuilder.Entity("Domain.ValueObjects.ClientSubscriber", b =>
                {
                    b.HasOne("Domain.Client", null)
                        .WithMany("_subscribers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Client", null)
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Client", b =>
                {
                    b.Navigation("_subscribers");
                });
#pragma warning restore 612, 618
        }
    }
}
